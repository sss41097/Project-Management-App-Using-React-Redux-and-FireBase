{"version":3,"sources":["components/layout/signin.js","store/actions/authactions.js","components/layout/signout.js","components/layout/navbar.js","components/dashboard/notification.js","components/projects/projectsummary.js","components/projects/projectlist.js","components/dashboard/dashboard.js","components/projects/projectdetail.js","components/auth/signinpage.js","components/auth/signuppage.js","store/actions/projectactions.js","components/projects/createproject.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/combineReducer.js","config/fbconfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedIn","state","console","log","firebase","links","uid","Notifications","notifications","style","backgroundColor","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProp","match","params","data","authorLastname","signinpage","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signInfunc","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","signuppage","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createproject","authorId","add","Date","createprojectfunction","history","push","middlewarecreateproject","App","exact","path","component","DashBoard","ProjectDetails","signInPage","signUpPage","createProject","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","combineReducer","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.bd2321e7.chunk.js","sourcesContent":["import React from  'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport {connect} from 'react-redux'\r\nimport {signOut} from '../../store/actions/authactions'\r\n\r\nconst SignedIn = (props)=>{\r\n\r\nreturn (\r\n    \r\n   <ul className=\"right\">\r\n       <li><NavLink to=\"/createproject\">New Project</NavLink>></li>\r\n       <li><NavLink to=\"/\" onClick={props.signOut}>Logout</NavLink>></li>\r\n       <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n            {props.profile.initials}\r\n           </NavLink></li>\r\n\r\n   </ul>\r\n)\r\n\r\n\r\n}\r\n\r\nconst mdtp = (dispatch) =>{\r\n\r\n    return {\r\n        signOut: ()=> dispatch(signOut())  \r\n    \r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, mdtp)(SignedIn)","export const signIn = (credentials) =>{\r\n\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        \r\n        firebase.auth().signInWithEmailAndPassword(\r\n          credentials.email,\r\n          credentials.password\r\n        ).then(() => {\r\n          dispatch({ type: 'LOGIN_SUCCESS' });\r\n        }).catch((err) => {\r\n          dispatch({ type: 'LOGIN_ERROR', err });\r\n        });\r\n    \r\n      }\r\n\r\n}\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, {getFirebase}) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase.auth().signOut().then(() => {\r\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n    });\r\n  }\r\n}\r\n\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase.auth().createUserWithEmailAndPassword(\r\n      newUser.email, \r\n      newUser.password\r\n    ).then(resp => {\r\n      return firestore.collection('users').doc(resp.user.uid).set({\r\n        firstName: newUser.firstName,\r\n        lastName: newUser.lastName,\r\n        initials: newUser.firstName[0] + newUser.lastName[0]\r\n      });\r\n    }).then(() => {\r\n      dispatch({ type: 'SIGNUP_SUCCESS' });\r\n    }).catch((err) => {\r\n      dispatch({ type: 'SIGNUP_ERROR', err});\r\n    });\r\n  }\r\n}\r\n\r\n\r\n","import React from  'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nconst SignedIn = ()=>{\r\n\r\nreturn (\r\n    \r\n   <ul className=\"right\">\r\n       <li><NavLink to=\"/signuppage\">Signup</NavLink>></li>\r\n       <li><NavLink to=\"/signinpage\">Signin</NavLink>></li>\r\n\r\n   </ul>\r\n)\r\n\r\n\r\n}\r\n\r\nexport default SignedIn","import React from  'react'\r\nimport {Link} from 'react-router-dom'\r\nimport SignedIn from './signin'\r\nimport SignedOut from './signout'\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nconst Navbar = (props)=>{\r\n\r\nconst {auth, profile } = props;\r\nconst links = auth.uid ? <SignedIn profile={profile}/> : <SignedOut/>\r\n\r\nreturn (\r\n   <nav className=\"nav-wrapper grey darken-3\">\r\n    <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">Project Manager</Link>\r\n        {links}\r\n    </div>\r\n   </nav>\r\n)\r\n\r\n                \r\n\r\n}\r\n\r\nconst mapStatetoProps = (state) =>{\r\n    \r\n    console.log(state)\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStatetoProps)(Navbar)","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst Notifications = (props) => {\r\n  const {notifications} = props\r\n  return (\r\n    <div className=\"section\" style={{backgroundColor: \"grey\"}}>\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\"  >\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n           {notifications&&notifications.map(item=>{\r\n\r\n              return( <li key={item.id}>\r\n              <span className=\"pink-text\">{item.user} </span>\r\n              <span>{item.content}</span>\r\n              <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\r\n              </li>\r\n              )\r\n           })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notifications\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nconst ProjectSummary = ({project}) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n  <span className=\"card-title \">{project.title}</span>\r\n  <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n  <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectSummary\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport ProjectSummary from './projectsummary'\r\n\r\nconst ProjectList = ({projects}) => {\r\n  return (\r\n      <div className=\"project-list section\" >\r\n            \r\n        {\r\n          projects && projects.map(project=>{\r\n          ///  console.log(project)\r\n            return (\r\n              <Link to={'project/'+project.id} key={project.id}>\r\n              <ProjectSummary project = {project} />\r\n              </Link>\r\n            )\r\n\r\n          })\r\n        }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList\r\n","import React, {Component} from 'react'\r\nimport Notifications from './notification'\r\nimport ProjectList from '../projects/projectlist'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nclass Dashboard extends Component {\r\n    render() {\r\n\r\n      const {auth, notifications} = this.props\r\n      if (!auth.uid) return <Redirect to='/signinpage' /> \r\n      return (\r\n        <div className=\"dashboard container\">\r\n          <div className=\"row\">\r\n            <div className=\"col s12 m6\">\r\n              <ProjectList projects={this.props.projects} />\r\n            </div>\r\n            <div className=\"col s12 m5 offset-m1\">\r\n              <Notifications notifications={notifications}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\nconst mapStoP = (state)=>{\r\n  //console.log(state)\r\n  return {\r\n    auth: state.firebase.auth,\r\n    projects : state.firestore.ordered.projects,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n  connect(mapStoP),\r\n  firestoreConnect([\r\n    {collection:'projects', orderBy:['createdAt', 'desc']},\r\n    {collection :'notifications', limit:6, orderBy:['time','desc']}\r\n  ])\r\n)\r\n(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport moment from 'moment'\r\n\r\n\r\nconst projectdetail =  (props) => {\r\n  const {project} = props  \r\n\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>Posted by {project.authorFirstName} {project.authorLastname}</div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStoP = (state, ownProp)=>{\r\n\r\n  const id = ownProp.match.params.id;\r\n\r\n  const projects = state.firestore.data.projects;\r\n  //console.log(projects);\r\n  const project = projects ? projects[id]:null\r\n  return {\r\n    project : project\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n  connect(mapStoP),\r\n  firestoreConnect([\r\n    {collection:'projects'}\r\n  ])\r\n)\r\n(projectdetail)","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../../store/actions/authactions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass signinpage extends Component {\r\n\r\n    state = {\r\n        email:'',\r\n        password:'',\r\n    }\r\n\r\n    handleChange = (e)=>{\r\n            this.setState({\r\n                [e.target.id] : e.target.value\r\n            })\r\n     }\r\n\r\n     handleSubmit = (e)=>{\r\n         e.preventDefault()\r\n        this.props.signInfunc(this.state)\r\n     }\r\n\r\n    render() {\r\n\r\n        const { authError, auth } = this.props;\r\n        if (auth.uid) return <Redirect to='/' /> \r\n\r\n\r\n        return (\r\n            <div className=\"container\">\r\n            <form className=\"white\" onSubmit={this.handleSubmit}>\r\n              \r\n              <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n              \r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" id='email' onChange={this.handleChange} />\r\n              </div>\r\n             \r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" id='password' onChange={this.handleChange} />\r\n              </div>\r\n             \r\n              <div className=\"input-field\">\r\n                <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n        {authError ? <p>{authError}</p>:null }\r\n              </div>\r\n              \r\n            </form>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mstp = (state) => {\r\n\r\n    return {\r\n        authError : state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mdtp = (dispatch) =>{\r\n\r\nreturn {\r\n    signInfunc : (creds) => dispatch(signIn(creds))\r\n}\r\n\r\n}\r\n\r\n\r\nexport default connect(mstp, mdtp)(signinpage)","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authactions'\r\n\r\n\r\nclass signuppage extends Component {\r\n\r\n    state = {\r\n        email:'',\r\n        password:'',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n\r\n    handleChange = (e)=>{\r\n            this.setState({\r\n                [e.target.id] : e.target.value\r\n            })\r\n     }\r\n\r\n     handleSubmit = (e)=>{\r\n         e.preventDefault()\r\n         console.log(this.state )\r\n         this.props.signUp(this.state)\r\n     }\r\n\r\n     \r\n\r\n    render() {\r\n\r\n      const { auth, authError } = this.props;\r\n      if (auth.uid) return <Redirect to='/' /> \r\n\r\n        return (\r\n            <div className=\"container\">\r\n            <form className=\"white\" onSubmit={this.handleSubmit}>\r\n              \r\n              <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n              \r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" id='email' onChange={this.handleChange} />\r\n              </div>\r\n             \r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" id='password' onChange={this.handleChange} />\r\n              </div>\r\n              \r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"firstName\">First Name</label>\r\n                <input type=\"text\" id='firstName' onChange={this.handleChange} />\r\n              </div>\r\n\r\n              <div className=\"input-field\">\r\n                <label htmlFor=\"lastName\">Last Name</label>\r\n                <input type=\"text\" id='lastName' onChange={this.handleChange} />\r\n              </div>\r\n             \r\n              <div className=\"input-field\">\r\n                <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                { authError ? <p>{authError}</p> : null }\r\n              </div>\r\n              \r\n            </form>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=> {\r\n  return {\r\n    signUp: (creds) => dispatch(signUp(creds))\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(signuppage)","const createproject = (project) => {\r\n\r\n    return (dispatch, getState,{getFirebase, getFirestore}) =>{\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        \r\n\r\n        const firestore = getFirestore();\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName:profile.lastName,\r\n            authorId :authorId,\r\n            createdAt:new Date()\r\n        }).then(()=>{\r\n            dispatch({\r\n                type:'CREATE_PROJECT',\r\n                project: project\r\n            })\r\n        }).catch((err)=>{\r\n            dispatch({\r\n                type:'CREATE_PROJECT_ERROR',\r\n                err\r\n            })\r\n        })\r\n\r\n\r\n     \r\n\r\n    }\r\n\r\n}\r\nexport default createproject","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport middlewarecreateproject from  '../../store/actions/projectactions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass createproject extends Component {\r\n\r\n    state = {\r\n        title:'',\r\n        content:''\r\n    }\r\n\r\n    handleChange = (e)=>{\r\n            this.setState({\r\n                [e.target.id] : e.target.value\r\n            })\r\n     }\r\n\r\n     handleSubmit = (e)=>{\r\n         e.preventDefault()\r\n         this.props.createprojectfunction(this.state)\r\n         this.props.history.push('/');\r\n     }\r\n\r\n    render() {\r\n      const {auth} = this.props\r\n      if (!auth.uid) return <Redirect to='/signinpage' /> \r\n\r\n\r\n        return (\r\n\r\n            <div className=\"container\">\r\n            <form className=\"white\" onSubmit={this.handleSubmit}>\r\n              <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\r\n             \r\n              <div className=\"input-field\">\r\n                <input type=\"text\" id='title' onChange={this.handleChange} />\r\n                <label htmlFor=\"title\">Project Title</label>\r\n              </div>\r\n             \r\n              <div className=\"input-field\">\r\n                <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                <label htmlFor=\"content\">Project Content</label>\r\n              </div>\r\n           \r\n              <div className=\"input-field\">\r\n                <button className=\"btn pink lighten-1\">Create</button>\r\n              </div>\r\n          \r\n            </form>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\n\r\nconst mapdispatchtoprops = (dispatch)=>{\r\n\r\n    return {\r\n        createprojectfunction : (project) =>{\r\n            dispatch(middlewarecreateproject(project))\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapdispatchtoprops)(createproject)","import React, {Component} from 'react';\nimport Navbar from './components/layout/navbar'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport DashBoard from './components/dashboard/dashboard'\nimport ProjectDetails from './components/projects/projectdetail'\nimport signInPage from './components/auth/signinpage'\nimport signUpPage from './components/auth/signuppage'\nimport createProject from './components/projects/createproject'\n\nclass App extends Component {\n    render() {\n      return (\n        <BrowserRouter>\n          <div className=\"App\">\n            <Navbar />\n            <Switch>\n              <Route exact path='/'component={DashBoard} />\n              <Route path='/project/:id' component={ProjectDetails} />\n              <Route path='/signinpage' component={signInPage} />\n              <Route path='/signuppage' component={signUpPage} />\n              <Route path='/createProject' component={createProject} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      );\n    }\n  }\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n\r\n    authError: null\r\n\r\n}\r\n\r\nconst authReducer = (state = initState, action)=>{\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n          console.log('login error');\r\n          return {\r\n            ...state,\r\n            authError: 'Login failed'\r\n          }\r\n    \r\n        case 'LOGIN_SUCCESS':\r\n          console.log('login success');\r\n          return {\r\n            ...state,\r\n            authError: 'Login success'\r\n          }\r\n        \r\n        case 'SIGNOUT_SUCCESS':\r\n          console.log('logout success');\r\n          return {\r\n            ...state,\r\n            authError: 'Logout success'\r\n          }\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n          console.log('signup success');\r\n          return {\r\n            ...state,\r\n            authError: null\r\n          }  \r\n          case 'SIGNUP_ERROR':\r\n            console.log('logout error');\r\n            return {\r\n              ...state,\r\n              authError: action.err.message\r\n            }\r\n          default:\r\n              return state;\r\n        \r\n        }\r\n\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n\r\nprojects:[\r\n    {id:1, title:'1st title', content:'content of 1st title'},\r\n    {id:2, title:'2st title', content:'content of 2st title'},\r\n\r\n]\r\n\r\n}\r\n\r\nconst projectReducer = (state = initState, action)=>{\r\n    \r\n    switch(action.type){\r\n        case 'CREATE_PROJECT':\r\n            console.log('project created', action.project)\r\n            return state\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err)\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n\r\n   \r\n\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport {combineReducers} from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,  //brings firestore databse inside firestore state.firestore is a new reducer\r\n    firebase: firebaseReducer //we dont need to connect it like firestore, direct use in navbar\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBYXZndIzkq6_m6ltP8BJ7wSQzSByhIBls\",\r\n    authDomain: \"project-management-app-1f1aa.firebaseapp.com\",\r\n    databaseURL: \"https://project-management-app-1f1aa.firebaseio.com\",\r\n    projectId: \"project-management-app-1f1aa\",\r\n    storageBucket: \"project-management-app-1f1aa.appspot.com\",\r\n    messagingSenderId: \"841850215649\",\r\n    appId: \"1:841850215649:web:3783131e43f65d6a876ba0\",\r\n    measurementId: \"G-486JV1X5J7\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore().settings({timestampsInSnapshots:true});\r\n\r\n  export default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport combineReducer from './store/reducers/combineReducer' \nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport thunk from 'redux-thunk'\nimport {reduxFirestore, getFirestore} from 'redux-firestore'\nimport {reactReduxFirebase, getFirebase} from 'react-redux-firebase'\nimport fbConfig from './config/fbconfig'\nimport firebase from 'firebase'\nconst store = createStore(combineReducer, compose(\n  applyMiddleware(thunk.withExtraArgument({\n    getFirebase, getFirestore})),\nreduxFirestore(firebase, fbConfig),\nreactReduxFirebase(fbConfig, {useFirestoreForProfile:true, userProfile:'users', attachAuthIsReady:true})\n\n));\n\n// loads page only after authenticating from firebase whether logged in or logged out\nstore.firebaseAuthIsReady.then(()=>{\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n      <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}